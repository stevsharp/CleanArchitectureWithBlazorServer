@page "/pages/quoteversions/create"
@using CleanArchitecture.Blazor.Application.Features.QuoteVersions.Commands.Create

@inherits MudComponentBase
@inject IValidationService Validator
@inject IStringLocalizer<QuoteVersions> L
@* @attribute [Authorize(Policy = Permissions.QuoteVersions.Create)] *@

<PageTitle>@Title</PageTitle>
<Breadcrumbs OnSaveButtonClick="OnSubmit" Saving="_saving" BreadcrumbItems="_breadcrumbItems"></Breadcrumbs>
<MudContainer Class="mt-3" MaxWidth="MaxWidth.Large">
    <MudCard Class="pa-2">
        <MudCardHeader>
            <CardHeaderContent>
                 <MudText Typo="Typo.h6">@Title</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
        <MudForm Model="@_model" @ref="@_quoteversionForm" Validation="@(Validator.ValidateValue(_model))">
            <MudGrid Spacing="2">
                <MudItem xs="12" md="6"> 
                        <MudNumericField  Label="@L[_model.GetMemberDescription(x=>x.QuoteId)]" @bind-Value="_model.QuoteId" For="@(() => _model.QuoteId)" Min="0" Required="false" RequiredError="@L["quote id is required!"]"></MudNumericField >
                </MudItem> 
<MudItem xs="12" md="6"> 
                        <MudNumericField  Label="@L[_model.GetMemberDescription(x=>x.VersionNumber)]" @bind-Value="_model.VersionNumber" For="@(() => _model.VersionNumber)" Min="0" Required="false" RequiredError="@L["version number is required!"]"></MudNumericField >
                </MudItem> 
<MudItem xs="12" md="6"> 
                        <MudDatePicker Label="@L[_model.GetMemberDescription(x=>x.CreatedAtUtc)]" @bind-Date="_model.CreatedAtUtc" For="@(() => _model.CreatedAtUtc)" Required="false" RequiredError="@L["created at utc is required!"]"></MudDatePicker>
                </MudItem> 
<MudItem xs="12" md="6"> 
                        <MudNumericField  Label="@L[_model.GetMemberDescription(x=>x.CreatedByEmployeeId)]" @bind-Value="_model.CreatedByEmployeeId" For="@(() => _model.CreatedByEmployeeId)" Min="0" Required="false" RequiredError="@L["created by employee id is required!"]"></MudNumericField >
                </MudItem> 

            </MudGrid>
        </MudForm>
        </MudCardContent>
         <MudCardActions Class="d-flex justify-end gap-2">
                    <MudLoadingButton Color="Color.Primary" DropShadow="false" Loading="@_saving" OnClick="OnSubmit">@ConstantString.Save</MudLoadingButton>
         </MudCardActions>
        </MudCard>
</MudContainer>
 

@code {
    public string? Title { get; private set; }
    MudForm? _quoteversionForm;
    private bool _saving = false;
    private List<BreadcrumbItem>? _breadcrumbItems;
    private CreateQuoteVersionCommand _model = new();
    protected override Task OnInitializedAsync()
    {
        Title = L["New QuoteVersion"];
        _breadcrumbItems = new List<BreadcrumbItem>
        {
            new BreadcrumbItem(L["Home"], href: "/"),
            new BreadcrumbItem(L["QuoteVersions"], href: "/pages/quoteversions"),
            new BreadcrumbItem(L["Create QuoteVersion"], href:null, disabled:true)
        };
        return Task.CompletedTask;
    }
    async Task OnSubmit()
    {
        try
        {
            _saving = true;
            await _quoteversionForm!.Validate().ConfigureAwait(false);
            if (!_quoteversionForm!.IsValid)
                return;
            var result = await Mediator.Send(_model);
            result.Match(
                data=>
                {
                    Snackbar.Add(ConstantString.SaveSuccess, MudBlazor.Severity.Info);
                    Navigation.NavigateTo($"/pages/QuoteVersions");
                },
                errors=>
                {
                    Snackbar.Add(errors, MudBlazor.Severity.Error);
                });
        }
        finally
        {
            _saving = false;
        }
    }
}