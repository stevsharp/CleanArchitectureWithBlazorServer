//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// ServiceVariantDto: transfers servicevariant data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/servicevariant
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.ServiceVariants.DTOs;

[Description("ServiceVariants")]
public class ServiceVariantDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Service id")]
    public int ServiceId {get;set;} 
    [Description("Service")]
    public ServiceDto? Service {get;set;} 
    [Description("Name")]
    public string Name {get;set;} 
    [Description("Unit")]
    public string? Unit {get;set;} 
    [Description("Complexity level")]
    public int? ComplexityLevel {get;set;} 
    [Description("Base price")]
    public decimal? BasePrice {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<ServiceVariant, ServiceVariantDto>(MemberList.None);
            CreateMap<ServiceVariantDto, ServiceVariant>(MemberList.None)
            .ForMember(dest => dest.Created, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.LastModified, opt => opt.Ignore())
            .ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

