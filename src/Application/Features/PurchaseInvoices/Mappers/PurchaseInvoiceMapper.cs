//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under one or more agreements.
//     The .NET Foundation licenses this file to you under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2025-03-27
//     Last Modified: 2025-03-27
//     Description: 
//       Defines mapping methods between `PurchaseInvoice` entities and related DTOs/commands 
//       within the CleanArchitecture.Blazor application. This mapper facilitates 
//       conversions to support different operations, such as creating, updating, 
//       and projecting purchaseinvoice data.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.PurchaseInvoices.Commands.AddEdit;
using CleanArchitecture.Blazor.Application.Features.PurchaseInvoices.Commands.Create;
using CleanArchitecture.Blazor.Application.Features.PurchaseInvoices.Commands.Update;
using CleanArchitecture.Blazor.Application.Features.PurchaseInvoices.DTOs;

namespace CleanArchitecture.Blazor.Application.Features.PurchaseInvoices.Mappers;

#pragma warning disable RMG020
#pragma warning disable RMG012
[Mapper]
public static partial class PurchaseInvoiceMapper
{
    public static partial PurchaseInvoiceDto ToDto(PurchaseInvoice source);
    //public static partial PurchaseInvoice FromDto(PurchaseInvoiceDto dto);
    public static partial PurchaseInvoice FromEditCommand(AddEditPurchaseInvoiceCommand command);

    public static partial AddEditPurchaseInvoiceCommand ToEditCommand(PurchaseInvoiceDto command);
    public static partial PurchaseInvoice FromCreateCommand(CreatePurchaseInvoiceCommand command);
    //public static partial UpdatePurchaseInvoiceCommand ToUpdateCommand(PurchaseInvoiceDto dto);
    //public static partial AddEditPurchaseInvoiceCommand CloneFromDto(PurchaseInvoiceDto dto);
    public static partial void ApplyChangesFrom(UpdatePurchaseInvoiceCommand source, PurchaseInvoice target);
    public static partial void ApplyChangesFrom(AddEditPurchaseInvoiceCommand source, PurchaseInvoice target);
    
    //public static partial IQueryable<PurchaseInvoiceDto> ProjectTo(this IQueryable<PurchaseInvoice> q);

}

public static class PurchaseExtensions
{
    public static IQueryable<PurchaseInvoiceDto> ProjectToDto(this IQueryable<PurchaseInvoice> query)
    {
        return query.Select(i => new PurchaseInvoiceDto
        {
            Id = i.Id,
            InvoiceNumber = i.InvoiceNumber,
            InvoiceDate = i.InvoiceDate,
            TotalAmount = i.TotalAmount,
            VATAmount = i.VATAmount,
        });
    }
}

