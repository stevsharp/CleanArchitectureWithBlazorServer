//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// CostItemDto: transfers costitem data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/costitem
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.CostItems.DTOs;

[Description("CostItems")]
public class CostItemDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Project id")]
    public int ProjectId {get;set;} 
    [Description("Project")]
    public ProjectDto? Project {get;set;} 
    [Description("Vendor id")]
    public int? VendorId {get;set;} 
    [Description("Vendor")]
    public VendorDto? Vendor {get;set;} 
    [Description("Description")]
    public string? Description {get;set;} 
    [Description("Quantity")]
    public decimal Quantity {get;set;} 
    [Description("Unit cost")]
    public decimal UnitCost {get;set;} 
    [Description("Total cost")]
    public decimal TotalCost {get;set;} 
    [Description("Category")]
    public string? Category {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<CostItem, CostItemDto>(MemberList.None);
            CreateMap<CostItemDto, CostItem>(MemberList.None)
            .ForMember(dest => dest.Created, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.LastModified, opt => opt.Ignore())
            .ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

