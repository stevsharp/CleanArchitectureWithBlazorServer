//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-23
// CompanyDto: transfers company data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/company
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


using CleanArchitecture.Blazor.Application.Features.Contacts.DTOs;

namespace CleanArchitecture.Blazor.Application.Features.Companies.DTOs;

[Description("Companies")]
public class CompanyDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Name")]
    public string Name {get;set;} 
    [Description("Vat number")]
    public string? VatNumber {get;set;} 
    [Description("Address")]
    public string? Address {get;set;} 
    [Description("Country")]
    public string? Country {get;set;} 
    [Description("Website")]
    public string? Website {get;set;} 
    [Description("Industry")]
    public string? Industry {get;set;} 
    [Description("Contacts")]
    public List<ContactDto>? Contacts {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<Company, CompanyDto>(MemberList.None);
            CreateMap<CompanyDto, Company>(MemberList.None)
            .ForMember(dest => dest.Created, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.LastModified, opt => opt.Ignore())
            .ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

