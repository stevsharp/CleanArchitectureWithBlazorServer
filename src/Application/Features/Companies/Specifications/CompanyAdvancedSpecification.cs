//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2025-09-23
//     Last Modified: 2025-09-23
//     Description: 
//       Defines a specification for applying advanced filtering options to the 
//       Company entity, supporting different views and keyword-based searches.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

namespace CleanArchitecture.Blazor.Application.Features.Companies.Specifications;
#nullable disable warnings
/// <summary>
/// Specification class for advanced filtering of Companies.
/// </summary>
public class CompanyAdvancedSpecification : Specification<Company>
{
    public CompanyAdvancedSpecification(CompanyAdvancedFilter filter)
    {
        DateTime today = DateTime.UtcNow;
        var todayrange = today.GetDateRange(CompanyListView.TODAY.ToString(), filter.CurrentUser.LocalTimeOffset);
        var last30daysrange = today.GetDateRange(CompanyListView.LAST_30_DAYS.ToString(),filter.CurrentUser.LocalTimeOffset);

        Query.Where(q => q.Name != null)
             .Where(filter.Keyword,!string.IsNullOrEmpty(filter.Keyword))
             .Where(q => q.CreatedById == filter.CurrentUser.UserId, filter.ListView == CompanyListView.My && filter.CurrentUser is not null)
             .Where(x => x.CreatedAt >= todayrange.Start && x.CreatedAt < todayrange.End.AddDays(1), filter.ListView == CompanyListView.TODAY)
             .Where(x => x.CreatedAt >= last30daysrange.Start, filter.ListView == CompanyListView.LAST_30_DAYS);
       
    }
}
