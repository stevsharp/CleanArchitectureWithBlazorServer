//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// VendorDto: transfers vendor data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/vendor
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.Vendors.DTOs;

[Description("Vendors")]
public record VendorDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Company id")]
    public int CompanyId {get;set;} 
    [Description("Company")]
    public CompanyDto? Company {get;set;} 
    [Description("Service category id")]
    public int? ServiceCategoryId {get;set;} 
    [Description("Service category")]
    public ServiceCategoryDto? ServiceCategory {get;set;} 
    [Description("Terms")]
    public string? Terms {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<Vendor, VendorDto>(MemberList.None);
            CreateMap<VendorDto, Vendor>(MemberList.None)
            //.ForMember(dest => dest.Created, opt => opt.Ignore())
            //.ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            //.ForMember(dest => dest.LastModified, opt => opt.Ignore())
            //.ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

