//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2025-03-21
//     Last Modified: 2025-03-21
//     Description: 
//       Defines a query to retrieve all subcategorys from the database. The result 
//       is cached to improve performance and reduce database load for repeated 
//       queries.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.SubCategories.DTOs;
using CleanArchitecture.Blazor.Application.Features.SubCategories.Mappers;
using CleanArchitecture.Blazor.Application.Features.SubCategories.Caching;

namespace CleanArchitecture.Blazor.Application.Features.SubCategories.Queries.GetAll;

public class GetAllSubCategoriesQuery : ICacheableRequest<IEnumerable<SubCategoryDto>>
{
   public string CacheKey => SubCategoryCacheKey.GetAllCacheKey;
   public IEnumerable<string>? Tags => SubCategoryCacheKey.Tags;
}

public class GetAllSubCategoriesQueryHandler :
     IRequestHandler<GetAllSubCategoriesQuery, IEnumerable<SubCategoryDto>>
{
    private readonly IApplicationDbContext _context;

    public GetAllSubCategoriesQueryHandler(
        IApplicationDbContext context)
    {
        _context = context;
    }

    public async Task<IEnumerable<SubCategoryDto>> Handle(GetAllSubCategoriesQuery request, CancellationToken cancellationToken)
    {
        var data = await _context.SubCategories.ProjectTo()
                                                .AsNoTracking()
                                                .ToListAsync(cancellationToken);
        return data;
    }
}


