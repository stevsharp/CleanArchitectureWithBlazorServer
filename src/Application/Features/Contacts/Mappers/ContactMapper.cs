//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under one or more agreements.
//     The .NET Foundation licenses this file to you under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2024-11-12
//     Last Modified: 2024-11-12
//     Description: 
//       Defines mapping methods between `Contact` entities and related DTOs/commands 
//       within the CleanArchitecture.Blazor application. This mapper facilitates 
//       conversions to support different operations, such as creating, updating, 
//       and projecting contact data.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.Contacts.Commands.AddEdit;
using CleanArchitecture.Blazor.Application.Features.Contacts.Commands.Create;
using CleanArchitecture.Blazor.Application.Features.Contacts.Commands.Update;
using CleanArchitecture.Blazor.Application.Features.Contacts.DTOs;

namespace CleanArchitecture.Blazor.Application.Features.Contacts.Mappers;

#pragma warning disable RMG020
#pragma warning disable RMG012
[Mapper]
public static partial class ContactMapper
{
    public static partial ContactDto ToDto(Contact source);
    public static partial Contact FromDto(ContactDto dto);
    public static partial Contact FromEditCommand(AddEditContactCommand command);
    public static partial AddEditContactCommand FromDtoToCommand(ContactDto dto);
    public static partial Contact FromCreateCommand(CreateContactCommand command);
    public static partial UpdateContactCommand ToUpdateCommand(ContactDto dto);
    public static partial AddEditContactCommand CloneFromDto(ContactDto dto);
    public static partial void ApplyChangesFrom(UpdateContactCommand source, Contact target);
    public static partial void ApplyChangesFrom(AddEditContactCommand source, Contact target);
    public static partial IQueryable<ContactDto> ProjectTo(this IQueryable<Contact> q);
}

