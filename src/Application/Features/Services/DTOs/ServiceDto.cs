//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// ServiceDto: transfers service data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/service
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.Services.DTOs;

[Description("Services")]
public class ServiceDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Service category id")]
    public int ServiceCategoryId {get;set;} 
    [Description("Category")]
    public ServiceCategoryDto? Category {get;set;} 
    [Description("Name")]
    public string Name {get;set;} 
    [Description("Description")]
    public string? Description {get;set;} 
    [Description("Default pricing model")]
    public PricingModelType? DefaultPricingModel {get;set;} 
    [Description("Variants")]
    public List<ServiceVariantDto>? Variants {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<Service, ServiceDto>(MemberList.None);
            CreateMap<ServiceDto, Service>(MemberList.None)
            .ForMember(dest => dest.Created, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.LastModified, opt => opt.Ignore())
            .ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

