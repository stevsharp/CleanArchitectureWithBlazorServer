//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// QuoteLineDto: transfers quoteline data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/quoteline
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.QuoteLines.DTOs;

[Description("QuoteLines")]
public class QuoteLineDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Quote version id")]
    public int QuoteVersionId {get;set;} 
    [Description("Version")]
    public QuoteVersionDto? Version {get;set;} 
    [Description("Service id")]
    public int ServiceId {get;set;} 
    [Description("Service")]
    public ServiceDto? Service {get;set;} 
    [Description("Variant id")]
    public int? VariantId {get;set;} 
    [Description("Variant")]
    public ServiceVariantDto? Variant {get;set;} 
    [Description("Pricing model")]
    public PricingModelType? PricingModel {get;set;} 
    [Description("Qty")]
    public decimal Qty {get;set;} 
    [Description("Unit price")]
    public decimal UnitPrice {get;set;} 
    [Description("Line total")]
    public decimal LineTotal {get;set;} 
    [Description("Venue id")]
    public int? VenueId {get;set;} 
    [Description("Venue")]
    public VenueDto? Venue {get;set;} 
    [Description("Pax")]
    public int? Pax {get;set;} 
    [Description("Media budget")]
    public decimal? MediaBudget {get;set;} 
    [Description("Agency fee pct")]
    public decimal? AgencyFeePct {get;set;} 


    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<QuoteLine, QuoteLineDto>(MemberList.None);
            CreateMap<QuoteLineDto, QuoteLine>(MemberList.None)
            .ForMember(dest => dest.Created, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.LastModified, opt => opt.Ignore())
            .ForMember(dest => dest.LastModifiedBy, opt => opt.Ignore())
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

