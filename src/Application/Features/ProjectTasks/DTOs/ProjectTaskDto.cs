//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-09-24
// ProjectTaskDto: transfers projecttask data between layers.
// Docs: https://docs.cleanarchitectureblazor.com/features/projecttask
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings


namespace CleanArchitecture.Blazor.Application.Features.ProjectTasks.DTOs;

[Description("ProjectTasks")]
public class ProjectTaskDto
{
    [Description("Id")]
    public int Id { get; set; }
        [Description("Project id")]
    public int ProjectId {get;set;} 
    [Description("Project")]
    public ProjectDto? Project {get;set;} 
    [Description("Assigned to id")]
    public int? AssignedToId {get;set;} 
    [Description("Assigned to")]
    public EmployeeDto? AssignedTo {get;set;} 
    [Description("Title")]
    public string? Title {get;set;} 
    [Description("Description")]
    public string? Description {get;set;} 
    [Description("Deadline")]
    public DateTime? Deadline {get;set;} 
    [Description("Status")]
    public CleanArchitecture.Blazor.Domain.Entities.TaskStatus? Status {get;set;} 
    [Description("Priority")]
    public TaskPriority? Priority {get;set;} 
    private class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<ProjectTask, ProjectTaskDto>(MemberList.None);
            CreateMap<ProjectTaskDto, ProjectTask>(MemberList.None)
            .ForMember(dest => dest.DomainEvents, opt => opt.Ignore());
        }
    }
}

